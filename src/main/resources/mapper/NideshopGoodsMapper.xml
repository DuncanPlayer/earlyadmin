<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.messi.earlyadmin.mapper.NideshopGoodsMapper">
    <resultMap id="BaseResultMap" type="net.messi.earlyadmin.pojo.NideshopGoods">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="category_id" property="categoryId" jdbcType="INTEGER"/>
        <result column="goods_sn" property="goodsSn" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="brand_id" property="brandId" jdbcType="INTEGER"/>
        <result column="goods_number" property="goodsNumber" jdbcType="INTEGER"/>
        <result column="keywords" property="keywords" jdbcType="VARCHAR"/>
        <result column="goods_brief" property="goodsBrief" jdbcType="VARCHAR"/>
        <result column="is_on_sale" property="isOnSale" jdbcType="BIT"/>
        <result column="add_time" property="addTime" jdbcType="INTEGER"/>
        <result column="sort_order" property="sortOrder" jdbcType="SMALLINT"/>
        <result column="is_delete" property="isDelete" jdbcType="BIT"/>
        <result column="attribute_category" property="attributeCategory" jdbcType="INTEGER"/>
        <result column="counter_price" property="counterPrice" jdbcType="DECIMAL"/>
        <result column="extra_price" property="extraPrice" jdbcType="DECIMAL"/>
        <result column="is_new" property="isNew" jdbcType="BIT"/>
        <result column="goods_unit" property="goodsUnit" jdbcType="VARCHAR"/>
        <result column="primary_pic_url" property="primaryPicUrl" jdbcType="VARCHAR"/>
        <result column="list_pic_url" property="listPicUrl" jdbcType="VARCHAR"/>
        <result column="retail_price" property="retailPrice" jdbcType="DECIMAL"/>
        <result column="sell_volume" property="sellVolume" jdbcType="INTEGER"/>
        <result column="primary_product_id" property="primaryProductId" jdbcType="INTEGER"/>
        <result column="unit_price" property="unitPrice" jdbcType="DECIMAL"/>
        <result column="promotion_desc" property="promotionDesc" jdbcType="VARCHAR"/>
        <result column="promotion_tag" property="promotionTag" jdbcType="VARCHAR"/>
        <result column="app_exclusive_price" property="appExclusivePrice" jdbcType="DECIMAL"/>
        <result column="is_app_exclusive" property="isAppExclusive" jdbcType="BIT"/>
        <result column="is_limited" property="isLimited" jdbcType="BIT"/>
        <result column="is_hot" property="isHot" jdbcType="BIT"/>
        <result column="categroy_name" property="categroyName" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="net.messi.earlyadmin.pojo.NideshopGoods" extends="BaseResultMap">
        <result column="goods_desc" property="goodsDesc" jdbcType="LONGVARCHAR"/>
    </resultMap>

    <select id="lasteInventory" resultType="java.lang.Integer">
        select goods_number from nideshop_goods where id=#{goodsId}
    </select>

    <select id="findAllGoodsByLimit" resultMap="BaseResultMap">
        select category_id,goods_sn,name,goods_number,list_pic_url,retail_price from nideshop_goods limit #{page},#{limitNum}
    </select>

    <select id="findGoodsByOrderId" resultMap="BaseResultMap">
        SELECT brand_id FROM nideshop_goods WHERE id IN (SELECT goods_id FROM nideshop_order_goods WHERE order_id=#{orderId})
    </select>

    <update id="updateInventory">
        update nideshop_goods set goods_number=goods_number-#{sellNum} where goods_sn=#{goodsSn}
    </update>

    <select id="getActivity" resultType="net.messi.earlyadmin.pojo.NideshopGoods">
        SELECT id,category_id as categoryId,goods_sn as goodsSn,name,brand_id as brandId,goods_brief as
        goodsBrief,goods_number as goodsNumber,brand_id as brandId,list_pic_url as listPicUrl,retail_price as
        retailPrice FROM nideshop_goods WHERE goods_sn=(SELECT goodsSn FROM earlyshop_activity LIMIT 1)
    </select>

    <select id="getGift" resultType="net.messi.earlyadmin.pojo.NideshopGoods">
        SELECT id,category_id as categoryId,goods_sn as goodsSn,name,brand_id as brandId,goods_brief as
        goodsBrief,goods_number as goodsNumber,brand_id as brandId,list_pic_url as listPicUrl,retail_price as
        retailPrice FROM nideshop_goods WHERE goods_sn=(SELECT goodsSn FROM earlyshop_gift LIMIT 1)
    </select>
    <!--CONCAT('%',#{keyword},'%')-->
    <select id="findGoodsByKeyword" resultMap="BaseResultMap">
        select * from nideshop_goods where name like "%"#{keyword}"%" order by id asc limit 0,#{size}
    </select>

    <select id="findGoodsByKeywordASC" resultMap="BaseResultMap">
        select * from nideshop_goods where name like "%"#{keyword}"%" order by retail_price asc limit 0,#{size}
    </select>

    <select id="findGoodsByKeywordDesc" resultMap="BaseResultMap">
        select * from nideshop_goods where name like "%"#{keyword}"%" order by retail_price desc limit 0,#{size}
    </select>

    <select id="findGoodsByCategoryIdAndKeyword" resultMap="BaseResultMap">
        select * from nideshop_goods where name like "%"#{keyword}"%" and category_id=#{categoryId} order by id asc
        limit 0,#{size}
    </select>


    <select id="findHelpKeyword" resultMap="BaseResultMap">
        select id,name from nideshop_goods where name like CONCAT('%',#{keyword},'%') order by id asc limit 0,5
    </select>

    <select id="findGoodsById" resultType="net.messi.earlyadmin.pojo.NideshopGoods">
        select * as goodsSn from nideshop_goods where id=#{id}
    </select>


    <select id="findGoodsByLimitByAsc" resultMap="BaseResultMap">
        select * from nideshop_goods where brand_id = {shopId} order by retail_price asc limit #{end}
    </select>

    <select id="findGoodsByLimitByDesc" resultMap="BaseResultMap">
        select * from nideshop_goods where brand_id = {shopId} order by retail_price desc limit #{end}
    </select>


    <select id="findGoodsByLimit" resultMap="BaseResultMap">
        select * from nideshop_goods where brand_id = #{shopId} limit #{end}
    </select>

    <select id="findGoodsByLimitAndCategoryId" resultMap="BaseResultMap">
        select * from nideshop_goods where brand_id = #{shopId} and category_id=#{categoryId} limit #{end}
    </select>

    <select id="goodsCount" resultType="int">
        select count(*) from nideshop_goods
    </select>

    <insert id="insertItemCf">
        insert into recommend(id,uid,gid,val,time) values(null,#{uid},#{gid},#{val},null)
    </insert>

    <select id="findGoodsByDefaultByHot" resultMap="BaseResultMap">
        select * from nideshop_goods where is_hot=#{isHot} limit #{page},#{size}
    </select>

    <select id="findGoodsByPriceASCByHot" resultMap="BaseResultMap">
        select * from nideshop_goods where is_hot=#{isHot} order by retail_price asc limit #{page},#{size}
    </select>

    <select id="findGoodsByPriceDESCByHot" resultMap="BaseResultMap">
        select * from nideshop_goods where is_hot=#{isHot} order by retail_price desc limit #{page},#{size}
    </select>

    <select id="findGoodsByCategoryIdAndByHot" resultMap="BaseResultMap">
        select * from nideshop_goods where is_hot=#{isHot} and category_id=#{categoryId} limit #{page},#{size}
    </select>


    <select id="findGoodsByDefault" resultMap="BaseResultMap">
        select * from nideshop_goods where is_new=#{isNew} limit #{page},#{size}
    </select>

    <select id="findGoodsByPriceASC" resultMap="BaseResultMap">
        select * from nideshop_goods where is_new=#{isNew} order by retail_price asc limit #{page},#{size}
    </select>

    <select id="findGoodsByPriceDESC" resultMap="BaseResultMap">
        select * from nideshop_goods where is_new=#{isNew} order by retail_price desc limit #{page},#{size}
    </select>

    <select id="findGoodsByCategoryIdAndIsNew" resultMap="BaseResultMap">
        select * from nideshop_goods where is_new=#{isNew} and category_id=#{categoryId} limit #{page},#{size}
    </select>

    <select id="findGoodsByGoodsSn" resultType="net.messi.earlyadmin.pojo.NideshopGoods" parameterType="java.lang.String">
        select id,category_id as categoryId,goods_sn as goodsSn,name,brand_id as brandId,goods_brief as
        goodsBrief,goods_number as goodsNumber,brand_id as brandId,list_pic_url as listPicUrl,retail_price as
        retailPrice from nideshop_goods where goods_sn=#{goodsSn}
    </select>

    <select id="findGoodsByCategoryId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select * from nideshop_goods where category_id=#{categoryId} limit #{offset},#{limit}
    </select>

    <select id="findGoodsByCategoryName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select * from nideshop_goods where categroy_name=#{categoryName}
    </select>

    <select id="findGoodsByNewGoods" resultMap="BaseResultMap">
        select * from nideshop_goods where is_new=1 order by retail_price asc limit 1,4
    </select>

    <select id="findGoodsByHotGoods" resultMap="BaseResultMap">
        select * from nideshop_goods where is_hot=1 order by retail_price asc limit 1,3
    </select>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, category_id, goods_sn, name, brand_id, goods_number, keywords, goods_brief, is_on_sale,
        add_time, sort_order, is_delete, attribute_category, counter_price, extra_price,
        is_new, goods_unit, primary_pic_url, list_pic_url, retail_price, sell_volume, primary_product_id,
        unit_price, promotion_desc, promotion_tag, app_exclusive_price, is_app_exclusive,
        is_limited, is_hot
    </sql>
    <sql id="Blob_Column_List">
        goods_desc
    </sql>
    <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs"
            parameterType="net.messi.earlyadmin.pojo.NideshopGoodsExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from nideshop_goods
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="net.messi.earlyadmin.pojo.NideshopGoodsExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from nideshop_goods
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from nideshop_goods
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from nideshop_goods
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="net.messi.earlyadmin.pojo.NideshopGoodsExample">
        delete from nideshop_goods
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="net.messi.earlyadmin.pojo.NideshopGoods">
        insert into nideshop_goods (id, category_id, goods_sn,
        name, brand_id, goods_number,
        keywords, goods_brief, is_on_sale,
        add_time, sort_order, is_delete,
        attribute_category, counter_price, extra_price,
        is_new, goods_unit, primary_pic_url,
        list_pic_url, retail_price, sell_volume,
        primary_product_id, unit_price, promotion_desc,
        promotion_tag, app_exclusive_price, is_app_exclusive,
        is_limited, is_hot, goods_desc
        )
        values (#{id,jdbcType=INTEGER}, #{categoryId,jdbcType=INTEGER}, #{goodsSn,jdbcType=VARCHAR},
        #{name,jdbcType=VARCHAR}, #{brandId,jdbcType=INTEGER}, #{goodsNumber,jdbcType=INTEGER},
        #{keywords,jdbcType=VARCHAR}, #{goodsBrief,jdbcType=VARCHAR}, #{isOnSale,jdbcType=BIT},
        #{addTime,jdbcType=INTEGER}, #{sortOrder,jdbcType=SMALLINT}, #{isDelete,jdbcType=BIT},
        #{attributeCategory,jdbcType=INTEGER}, #{counterPrice,jdbcType=DECIMAL}, #{extraPrice,jdbcType=DECIMAL},
        #{isNew,jdbcType=BIT}, #{goodsUnit,jdbcType=VARCHAR}, #{primaryPicUrl,jdbcType=VARCHAR},
        #{listPicUrl,jdbcType=VARCHAR}, #{retailPrice,jdbcType=DECIMAL}, #{sellVolume,jdbcType=INTEGER},
        #{primaryProductId,jdbcType=INTEGER}, #{unitPrice,jdbcType=DECIMAL}, #{promotionDesc,jdbcType=VARCHAR},
        #{promotionTag,jdbcType=VARCHAR}, #{appExclusivePrice,jdbcType=DECIMAL}, #{isAppExclusive,jdbcType=BIT},
        #{isLimited,jdbcType=BIT}, #{isHot,jdbcType=BIT}, #{goodsDesc,jdbcType=LONGVARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="net.messi.earlyadmin.pojo.NideshopGoods">
        insert into nideshop_goods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="categoryId != null">
                category_id,
            </if>
            <if test="goodsSn != null">
                goods_sn,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="brandId != null">
                brand_id,
            </if>
            <if test="goodsNumber != null">
                goods_number,
            </if>
            <if test="keywords != null">
                keywords,
            </if>
            <if test="goodsBrief != null">
                goods_brief,
            </if>
            <if test="isOnSale != null">
                is_on_sale,
            </if>
            <if test="addTime != null">
                add_time,
            </if>
            <if test="sortOrder != null">
                sort_order,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="attributeCategory != null">
                attribute_category,
            </if>
            <if test="counterPrice != null">
                counter_price,
            </if>
            <if test="extraPrice != null">
                extra_price,
            </if>
            <if test="isNew != null">
                is_new,
            </if>
            <if test="goodsUnit != null">
                goods_unit,
            </if>
            <if test="primaryPicUrl != null">
                primary_pic_url,
            </if>
            <if test="listPicUrl != null">
                list_pic_url,
            </if>
            <if test="retailPrice != null">
                retail_price,
            </if>
            <if test="sellVolume != null">
                sell_volume,
            </if>
            <if test="primaryProductId != null">
                primary_product_id,
            </if>
            <if test="unitPrice != null">
                unit_price,
            </if>
            <if test="promotionDesc != null">
                promotion_desc,
            </if>
            <if test="promotionTag != null">
                promotion_tag,
            </if>
            <if test="appExclusivePrice != null">
                app_exclusive_price,
            </if>
            <if test="isAppExclusive != null">
                is_app_exclusive,
            </if>
            <if test="isLimited != null">
                is_limited,
            </if>
            <if test="isHot != null">
                is_hot,
            </if>
            <if test="goodsDesc != null">
                goods_desc,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="categoryId != null">
                #{categoryId,jdbcType=INTEGER},
            </if>
            <if test="goodsSn != null">
                #{goodsSn,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="brandId != null">
                #{brandId,jdbcType=INTEGER},
            </if>
            <if test="goodsNumber != null">
                #{goodsNumber,jdbcType=INTEGER},
            </if>
            <if test="keywords != null">
                #{keywords,jdbcType=VARCHAR},
            </if>
            <if test="goodsBrief != null">
                #{goodsBrief,jdbcType=VARCHAR},
            </if>
            <if test="isOnSale != null">
                #{isOnSale,jdbcType=BIT},
            </if>
            <if test="addTime != null">
                #{addTime,jdbcType=INTEGER},
            </if>
            <if test="sortOrder != null">
                #{sortOrder,jdbcType=SMALLINT},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=BIT},
            </if>
            <if test="attributeCategory != null">
                #{attributeCategory,jdbcType=INTEGER},
            </if>
            <if test="counterPrice != null">
                #{counterPrice,jdbcType=DECIMAL},
            </if>
            <if test="extraPrice != null">
                #{extraPrice,jdbcType=DECIMAL},
            </if>
            <if test="isNew != null">
                #{isNew,jdbcType=BIT},
            </if>
            <if test="goodsUnit != null">
                #{goodsUnit,jdbcType=VARCHAR},
            </if>
            <if test="primaryPicUrl != null">
                #{primaryPicUrl,jdbcType=VARCHAR},
            </if>
            <if test="listPicUrl != null">
                #{listPicUrl,jdbcType=VARCHAR},
            </if>
            <if test="retailPrice != null">
                #{retailPrice,jdbcType=DECIMAL},
            </if>
            <if test="sellVolume != null">
                #{sellVolume,jdbcType=INTEGER},
            </if>
            <if test="primaryProductId != null">
                #{primaryProductId,jdbcType=INTEGER},
            </if>
            <if test="unitPrice != null">
                #{unitPrice,jdbcType=DECIMAL},
            </if>
            <if test="promotionDesc != null">
                #{promotionDesc,jdbcType=VARCHAR},
            </if>
            <if test="promotionTag != null">
                #{promotionTag,jdbcType=VARCHAR},
            </if>
            <if test="appExclusivePrice != null">
                #{appExclusivePrice,jdbcType=DECIMAL},
            </if>
            <if test="isAppExclusive != null">
                #{isAppExclusive,jdbcType=BIT},
            </if>
            <if test="isLimited != null">
                #{isLimited,jdbcType=BIT},
            </if>
            <if test="isHot != null">
                #{isHot,jdbcType=BIT},
            </if>
            <if test="goodsDesc != null">
                #{goodsDesc,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="net.messi.earlyadmin.pojo.NideshopGoodsExample"
            resultType="java.lang.Integer">
        select count(*) from nideshop_goods
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update nideshop_goods
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.categoryId != null">
                category_id = #{record.categoryId,jdbcType=INTEGER},
            </if>
            <if test="record.goodsSn != null">
                goods_sn = #{record.goodsSn,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.brandId != null">
                brand_id = #{record.brandId,jdbcType=INTEGER},
            </if>
            <if test="record.goodsNumber != null">
                goods_number = #{record.goodsNumber,jdbcType=INTEGER},
            </if>
            <if test="record.keywords != null">
                keywords = #{record.keywords,jdbcType=VARCHAR},
            </if>
            <if test="record.goodsBrief != null">
                goods_brief = #{record.goodsBrief,jdbcType=VARCHAR},
            </if>
            <if test="record.isOnSale != null">
                is_on_sale = #{record.isOnSale,jdbcType=BIT},
            </if>
            <if test="record.addTime != null">
                add_time = #{record.addTime,jdbcType=INTEGER},
            </if>
            <if test="record.sortOrder != null">
                sort_order = #{record.sortOrder,jdbcType=SMALLINT},
            </if>
            <if test="record.isDelete != null">
                is_delete = #{record.isDelete,jdbcType=BIT},
            </if>
            <if test="record.attributeCategory != null">
                attribute_category = #{record.attributeCategory,jdbcType=INTEGER},
            </if>
            <if test="record.counterPrice != null">
                counter_price = #{record.counterPrice,jdbcType=DECIMAL},
            </if>
            <if test="record.extraPrice != null">
                extra_price = #{record.extraPrice,jdbcType=DECIMAL},
            </if>
            <if test="record.isNew != null">
                is_new = #{record.isNew,jdbcType=BIT},
            </if>
            <if test="record.goodsUnit != null">
                goods_unit = #{record.goodsUnit,jdbcType=VARCHAR},
            </if>
            <if test="record.primaryPicUrl != null">
                primary_pic_url = #{record.primaryPicUrl,jdbcType=VARCHAR},
            </if>
            <if test="record.listPicUrl != null">
                list_pic_url = #{record.listPicUrl,jdbcType=VARCHAR},
            </if>
            <if test="record.retailPrice != null">
                retail_price = #{record.retailPrice,jdbcType=DECIMAL},
            </if>
            <if test="record.sellVolume != null">
                sell_volume = #{record.sellVolume,jdbcType=INTEGER},
            </if>
            <if test="record.primaryProductId != null">
                primary_product_id = #{record.primaryProductId,jdbcType=INTEGER},
            </if>
            <if test="record.unitPrice != null">
                unit_price = #{record.unitPrice,jdbcType=DECIMAL},
            </if>
            <if test="record.promotionDesc != null">
                promotion_desc = #{record.promotionDesc,jdbcType=VARCHAR},
            </if>
            <if test="record.promotionTag != null">
                promotion_tag = #{record.promotionTag,jdbcType=VARCHAR},
            </if>
            <if test="record.appExclusivePrice != null">
                app_exclusive_price = #{record.appExclusivePrice,jdbcType=DECIMAL},
            </if>
            <if test="record.isAppExclusive != null">
                is_app_exclusive = #{record.isAppExclusive,jdbcType=BIT},
            </if>
            <if test="record.isLimited != null">
                is_limited = #{record.isLimited,jdbcType=BIT},
            </if>
            <if test="record.isHot != null">
                is_hot = #{record.isHot,jdbcType=BIT},
            </if>
            <if test="record.goodsDesc != null">
                goods_desc = #{record.goodsDesc,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update nideshop_goods
        set id = #{record.id,jdbcType=INTEGER},
        category_id = #{record.categoryId,jdbcType=INTEGER},
        goods_sn = #{record.goodsSn,jdbcType=VARCHAR},
        name = #{record.name,jdbcType=VARCHAR},
        brand_id = #{record.brandId,jdbcType=INTEGER},
        goods_number = #{record.goodsNumber,jdbcType=INTEGER},
        keywords = #{record.keywords,jdbcType=VARCHAR},
        goods_brief = #{record.goodsBrief,jdbcType=VARCHAR},
        is_on_sale = #{record.isOnSale,jdbcType=BIT},
        add_time = #{record.addTime,jdbcType=INTEGER},
        sort_order = #{record.sortOrder,jdbcType=SMALLINT},
        is_delete = #{record.isDelete,jdbcType=BIT},
        attribute_category = #{record.attributeCategory,jdbcType=INTEGER},
        counter_price = #{record.counterPrice,jdbcType=DECIMAL},
        extra_price = #{record.extraPrice,jdbcType=DECIMAL},
        is_new = #{record.isNew,jdbcType=BIT},
        goods_unit = #{record.goodsUnit,jdbcType=VARCHAR},
        primary_pic_url = #{record.primaryPicUrl,jdbcType=VARCHAR},
        list_pic_url = #{record.listPicUrl,jdbcType=VARCHAR},
        retail_price = #{record.retailPrice,jdbcType=DECIMAL},
        sell_volume = #{record.sellVolume,jdbcType=INTEGER},
        primary_product_id = #{record.primaryProductId,jdbcType=INTEGER},
        unit_price = #{record.unitPrice,jdbcType=DECIMAL},
        promotion_desc = #{record.promotionDesc,jdbcType=VARCHAR},
        promotion_tag = #{record.promotionTag,jdbcType=VARCHAR},
        app_exclusive_price = #{record.appExclusivePrice,jdbcType=DECIMAL},
        is_app_exclusive = #{record.isAppExclusive,jdbcType=BIT},
        is_limited = #{record.isLimited,jdbcType=BIT},
        is_hot = #{record.isHot,jdbcType=BIT},
        goods_desc = #{record.goodsDesc,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update nideshop_goods
        set id = #{record.id,jdbcType=INTEGER},
        category_id = #{record.categoryId,jdbcType=INTEGER},
        goods_sn = #{record.goodsSn,jdbcType=VARCHAR},
        name = #{record.name,jdbcType=VARCHAR},
        brand_id = #{record.brandId,jdbcType=INTEGER},
        goods_number = #{record.goodsNumber,jdbcType=INTEGER},
        keywords = #{record.keywords,jdbcType=VARCHAR},
        goods_brief = #{record.goodsBrief,jdbcType=VARCHAR},
        is_on_sale = #{record.isOnSale,jdbcType=BIT},
        add_time = #{record.addTime,jdbcType=INTEGER},
        sort_order = #{record.sortOrder,jdbcType=SMALLINT},
        is_delete = #{record.isDelete,jdbcType=BIT},
        attribute_category = #{record.attributeCategory,jdbcType=INTEGER},
        counter_price = #{record.counterPrice,jdbcType=DECIMAL},
        extra_price = #{record.extraPrice,jdbcType=DECIMAL},
        is_new = #{record.isNew,jdbcType=BIT},
        goods_unit = #{record.goodsUnit,jdbcType=VARCHAR},
        primary_pic_url = #{record.primaryPicUrl,jdbcType=VARCHAR},
        list_pic_url = #{record.listPicUrl,jdbcType=VARCHAR},
        retail_price = #{record.retailPrice,jdbcType=DECIMAL},
        sell_volume = #{record.sellVolume,jdbcType=INTEGER},
        primary_product_id = #{record.primaryProductId,jdbcType=INTEGER},
        unit_price = #{record.unitPrice,jdbcType=DECIMAL},
        promotion_desc = #{record.promotionDesc,jdbcType=VARCHAR},
        promotion_tag = #{record.promotionTag,jdbcType=VARCHAR},
        app_exclusive_price = #{record.appExclusivePrice,jdbcType=DECIMAL},
        is_app_exclusive = #{record.isAppExclusive,jdbcType=BIT},
        is_limited = #{record.isLimited,jdbcType=BIT},
        is_hot = #{record.isHot,jdbcType=BIT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="net.messi.earlyadmin.pojo.NideshopGoods">
        update nideshop_goods
        <set>
            <if test="categoryId != null">
                category_id = #{categoryId,jdbcType=INTEGER},
            </if>
            <if test="goodsSn != null">
                goods_sn = #{goodsSn,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="brandId != null">
                brand_id = #{brandId,jdbcType=INTEGER},
            </if>
            <if test="goodsNumber != null">
                goods_number = #{goodsNumber,jdbcType=INTEGER},
            </if>
            <if test="keywords != null">
                keywords = #{keywords,jdbcType=VARCHAR},
            </if>
            <if test="goodsBrief != null">
                goods_brief = #{goodsBrief,jdbcType=VARCHAR},
            </if>
            <if test="isOnSale != null">
                is_on_sale = #{isOnSale,jdbcType=BIT},
            </if>
            <if test="addTime != null">
                add_time = #{addTime,jdbcType=INTEGER},
            </if>
            <if test="sortOrder != null">
                sort_order = #{sortOrder,jdbcType=SMALLINT},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=BIT},
            </if>
            <if test="attributeCategory != null">
                attribute_category = #{attributeCategory,jdbcType=INTEGER},
            </if>
            <if test="counterPrice != null">
                counter_price = #{counterPrice,jdbcType=DECIMAL},
            </if>
            <if test="extraPrice != null">
                extra_price = #{extraPrice,jdbcType=DECIMAL},
            </if>
            <if test="isNew != null">
                is_new = #{isNew,jdbcType=BIT},
            </if>
            <if test="goodsUnit != null">
                goods_unit = #{goodsUnit,jdbcType=VARCHAR},
            </if>
            <if test="primaryPicUrl != null">
                primary_pic_url = #{primaryPicUrl,jdbcType=VARCHAR},
            </if>
            <if test="listPicUrl != null">
                list_pic_url = #{listPicUrl,jdbcType=VARCHAR},
            </if>
            <if test="retailPrice != null">
                retail_price = #{retailPrice,jdbcType=DECIMAL},
            </if>
            <if test="sellVolume != null">
                sell_volume = #{sellVolume,jdbcType=INTEGER},
            </if>
            <if test="primaryProductId != null">
                primary_product_id = #{primaryProductId,jdbcType=INTEGER},
            </if>
            <if test="unitPrice != null">
                unit_price = #{unitPrice,jdbcType=DECIMAL},
            </if>
            <if test="promotionDesc != null">
                promotion_desc = #{promotionDesc,jdbcType=VARCHAR},
            </if>
            <if test="promotionTag != null">
                promotion_tag = #{promotionTag,jdbcType=VARCHAR},
            </if>
            <if test="appExclusivePrice != null">
                app_exclusive_price = #{appExclusivePrice,jdbcType=DECIMAL},
            </if>
            <if test="isAppExclusive != null">
                is_app_exclusive = #{isAppExclusive,jdbcType=BIT},
            </if>
            <if test="isLimited != null">
                is_limited = #{isLimited,jdbcType=BIT},
            </if>
            <if test="isHot != null">
                is_hot = #{isHot,jdbcType=BIT},
            </if>
            <if test="goodsDesc != null">
                goods_desc = #{goodsDesc,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="net.messi.earlyadmin.pojo.NideshopGoods">
        update nideshop_goods
        set category_id = #{categoryId,jdbcType=INTEGER},
        goods_sn = #{goodsSn,jdbcType=VARCHAR},
        name = #{name,jdbcType=VARCHAR},
        brand_id = #{brandId,jdbcType=INTEGER},
        goods_number = #{goodsNumber,jdbcType=INTEGER},
        keywords = #{keywords,jdbcType=VARCHAR},
        goods_brief = #{goodsBrief,jdbcType=VARCHAR},
        is_on_sale = #{isOnSale,jdbcType=BIT},
        add_time = #{addTime,jdbcType=INTEGER},
        sort_order = #{sortOrder,jdbcType=SMALLINT},
        is_delete = #{isDelete,jdbcType=BIT},
        attribute_category = #{attributeCategory,jdbcType=INTEGER},
        counter_price = #{counterPrice,jdbcType=DECIMAL},
        extra_price = #{extraPrice,jdbcType=DECIMAL},
        is_new = #{isNew,jdbcType=BIT},
        goods_unit = #{goodsUnit,jdbcType=VARCHAR},
        primary_pic_url = #{primaryPicUrl,jdbcType=VARCHAR},
        list_pic_url = #{listPicUrl,jdbcType=VARCHAR},
        retail_price = #{retailPrice,jdbcType=DECIMAL},
        sell_volume = #{sellVolume,jdbcType=INTEGER},
        primary_product_id = #{primaryProductId,jdbcType=INTEGER},
        unit_price = #{unitPrice,jdbcType=DECIMAL},
        promotion_desc = #{promotionDesc,jdbcType=VARCHAR},
        promotion_tag = #{promotionTag,jdbcType=VARCHAR},
        app_exclusive_price = #{appExclusivePrice,jdbcType=DECIMAL},
        is_app_exclusive = #{isAppExclusive,jdbcType=BIT},
        is_limited = #{isLimited,jdbcType=BIT},
        is_hot = #{isHot,jdbcType=BIT},
        goods_desc = #{goodsDesc,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="net.messi.earlyadmin.pojo.NideshopGoods">
        update nideshop_goods
        set category_id = #{categoryId,jdbcType=INTEGER},
        goods_sn = #{goodsSn,jdbcType=VARCHAR},
        name = #{name,jdbcType=VARCHAR},
        brand_id = #{brandId,jdbcType=INTEGER},
        goods_number = #{goodsNumber,jdbcType=INTEGER},
        keywords = #{keywords,jdbcType=VARCHAR},
        goods_brief = #{goodsBrief,jdbcType=VARCHAR},
        is_on_sale = #{isOnSale,jdbcType=BIT},
        add_time = #{addTime,jdbcType=INTEGER},
        sort_order = #{sortOrder,jdbcType=SMALLINT},
        is_delete = #{isDelete,jdbcType=BIT},
        attribute_category = #{attributeCategory,jdbcType=INTEGER},
        counter_price = #{counterPrice,jdbcType=DECIMAL},
        extra_price = #{extraPrice,jdbcType=DECIMAL},
        is_new = #{isNew,jdbcType=BIT},
        goods_unit = #{goodsUnit,jdbcType=VARCHAR},
        primary_pic_url = #{primaryPicUrl,jdbcType=VARCHAR},
        list_pic_url = #{listPicUrl,jdbcType=VARCHAR},
        retail_price = #{retailPrice,jdbcType=DECIMAL},
        sell_volume = #{sellVolume,jdbcType=INTEGER},
        primary_product_id = #{primaryProductId,jdbcType=INTEGER},
        unit_price = #{unitPrice,jdbcType=DECIMAL},
        promotion_desc = #{promotionDesc,jdbcType=VARCHAR},
        promotion_tag = #{promotionTag,jdbcType=VARCHAR},
        app_exclusive_price = #{appExclusivePrice,jdbcType=DECIMAL},
        is_app_exclusive = #{isAppExclusive,jdbcType=BIT},
        is_limited = #{isLimited,jdbcType=BIT},
        is_hot = #{isHot,jdbcType=BIT}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>